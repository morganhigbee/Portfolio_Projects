## Queries used for my Tableau Project using BigQuery

## 1.

SELECT 
  SUM(new_cases) AS total_cases, 
  SUM(new_deaths) AS total_deaths, 
  SUM(new_deaths)/SUM(new_cases)*100 AS Death_Percentage 
FROM `robotic-center-379022.Portfolio_Project.Covid_Deaths` 
WHERE continent IS NOT NULL 
ORDER BY total_cases, total_deaths

## 2.
## We take these out as they are not inluded in the above queries and want to stay consistent
## European Union is part of Europe 

SELECT 
  location, 
  SUM(new_deaths) AS Total_Death_Count 
FROM 
  `robotic-center-379022.Portfolio_Project.Covid_Deaths`
WHERE 
  continent IS NULL 
  AND location NOT IN ('World', 'European Union', 'International', 'High income', 'Upper middle income', 'Lower middle income', 'Low income')
GROUP BY 
  location 
ORDER BY 
  Total_Death_Count DESC
  
##3.

SELECT 
  Location, 
  Population, 
  MAX(total_cases) AS Highest_Infection_Count, 
  MAX((total_cases/Population))*100 AS Percent_Population_Infected 
FROM 
  `robotic-center-379022.Portfolio_Project.Covid_Deaths`
GROUP BY 
  Location, Population 
ORDER BY 
  Percent_Population_Infected DESC

##4.

SELECT 
  Location, 
  Population,
  date,
  MAX(total_cases) AS Highest_Infection_Count, 
  MAX((total_cases/population))*100 AS Percent_Population_Infected 
FROM 
  `robotic-center-379022.Portfolio_Project.Covid_Deaths`
GROUP BY 
  Location, Population, date
ORDER BY 
  Percent_Population_Infected DESC


## Other queries that might be used for my Tableau Project

## 1. 

SELECT 
  Deaths.continent, 
  Deaths.location, 
  Deaths.date, 
  Deaths.population,
  MAX(Vaccinations.total_vaccinations) as Rolling_People_Vaccinated,
  (MAX(Vaccinations.total_vaccinations)/Deaths.population)*100 as Vaccination_Percentage
FROM `robotic-center-379022.Portfolio_Project.Covid_Deaths` AS Deaths
JOIN `robotic-center-379022.Portfolio_Project.Covid_Vaccinations` AS Vaccinations
  ON Deaths.location = Vaccinations.location
  AND Deaths.date = Vaccinations.date
WHERE 
  Deaths.continent IS NOT NULL 
GROUP BY 
  Deaths.continent, 
  Deaths.location, 
  Deaths.date, 
  Deaths.population
ORDER BY 
  1, 2, 3

## 2.

SELECT 
  SUM(new_cases) as total_cases, 
  SUM(new_deaths) as total_deaths, 
  SUM(new_deaths)/SUM(new_cases)*100 as Death_Percentage
FROM `robotic-center-379022.Portfolio_Project.Covid_Deaths`
WHERE continent IS NOT NULL 
ORDER BY 1, 2

## 3.
## We take these out as they are not inluded in the above queries and want to stay consistent
## European Union is part of Europe 

SELECT 
  location, 
  SUM(new_deaths) AS Total_Death_Count 
FROM 
  `robotic-center-379022.Portfolio_Project.Covid_Deaths`
WHERE 
  continent IS NULL 
  AND location NOT IN ('World', 'European Union', 'International', 'High income', 'Upper middle income', 'Lower middle income', 'Low income')
GROUP BY 
  location 
ORDER BY 
  Total_Death_Count DESC
  
## 4.

SELECT 
  Location, 
  Population, 
  MAX(total_cases) as Highest_Infection_Count, 
  MAX((total_cases/population))*100 as Percent_Population_Infected
FROM `robotic-center-379022.Portfolio_Project.Covid_Deaths`
GROUP BY 
  Location, 
  Population
ORDER BY 
  Percent_Population_Infected DESC

## 5.

SELECT 
  Location, 
  date, 
  population, 
  total_cases, 
  total_deaths
FROM `robotic-center-379022.Portfolio_Project.Covid_Deaths`
WHERE 
  continent IS NOT NULL 
ORDER BY 
  1, 2 DESC

## 6.

WITH Population_vs_Vaccinations AS (
    SELECT 
       Deaths.continent, 
       Deaths.location, 
       Deaths.date, 
       Deaths.population, 
       Vaccinations.new_vaccinations,
        SUM(Vaccinations.new_vaccinations) OVER (PARTITION BY Deaths.Location ORDER BY Deaths.location, Deaths.Date) Rolling_People_Vaccinated
    FROM `robotic-center-379022.Portfolio_Project.Covid_Deaths` AS Deaths
    JOIN `robotic-center-379022.Portfolio_Project.Covid_Vaccinations` AS Vaccinations
        ON Deaths.location = Vaccinations.location
        AND Deaths.date = Vaccinations.date
    WHERE 
      Deaths.continent IS NOT NULL 
)
SELECT *, (Rolling_People_Vaccinated/Population)*100 AS Percent_People_Vaccinated
FROM Population_vs_Vaccinations

## 7.

SELECT 
  Location, 
  Population, date, 
  MAX(total_cases) AS Highest_Infection_Count, 
  MAX(total_cases/population)*100 AS Percent_Population_Infected
FROM `robotic-center-379022.Portfolio_Project.Covid_Deaths`
GROUP BY 
  Location, 
  Population, 
  date
ORDER BY 
  Percent_Population_Infected DESC

